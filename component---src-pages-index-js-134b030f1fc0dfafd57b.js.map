{"version":3,"file":"component---src-pages-index-js-134b030f1fc0dfafd57b.js","mappings":"2OA0KA,UAlKkB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,wLAQNK,QAAQC,IAAIL,GAEV,gBAAC,IAAD,CAAQL,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,2BACE,uCACA,sBAAIO,MAAO,CAAEC,UAAU,QAAWC,UAAU,aAC1C,0BACE,qBAAGF,MAAO,CAAEG,WAAY,SAAxB,iCAEE,2BAFF,4GAME,2BANF,YAQE,2BACA,wBAAMH,MAAO,CAAEI,MAAO,YAAtB,+CAKJ,sBAAIF,UAAU,cACZ,+BACE,gCACA,0CAEF,+BACE,mCACA,0CAEF,+BACE,kCACA,8CAEF,+BACE,iCACA,0DAIN,6CACA,sBAAIA,UAAU,eACZ,0BACE,gBAAC,EAAAG,EAAD,CACEH,UAAU,WACVI,IAAI,yBACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,GACTC,IAAI,aALN,uBAQF,0BACE,gBAAC,EAAAJ,EAAD,CACEH,UAAU,WACVI,IAAI,wBACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,GACTC,IAAI,aALN,uBAQF,0BACE,gBAAC,EAAAJ,EAAD,CACEH,UAAU,WACVI,IAAI,+BACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,GACTC,IAAI,aALN,uBAQF,0BACE,gBAAC,EAAAJ,EAAD,CACEH,UAAU,WACVI,IAAI,2BACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,GACTC,IAAI,aALN,uBAQF,0BACE,gBAAC,EAAAJ,EAAD,CACEH,UAAU,WACVI,IAAI,0BACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,GACTC,IAAI,aALN,uBAQF,0BACE,gBAAC,EAAAJ,EAAD,CACEH,UAAU,WACVI,IAAI,uBACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,GACTC,IAAI,aALN,sBAQF,0BACE,gBAAC,EAAAJ,EAAD,CACEH,UAAU,WACVI,IAAI,0BACJC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,QAAS,GACTC,IAAI,aALN,yBAUN,sBAAIP,UAAU,cAAd,QAEA,sBAAIF,MAAO,CAAEC,UAAU,SACpBP,EAAMgB,KAAI,SAAAC,GACT,IAAMlB,EAAQkB,EAAKC,YAAYnB,OAASkB,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEZ,UAAU,iBACVc,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAY3B,KAG/B,6BAAQkB,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,2B","sources":["webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n  console.log(posts)\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <div>\n        <h1>INTRODUCE</h1>\n        <ol style={{ listStyle: `none` }} className=\"introduce\">\n          <li>\n            <p style={{ lineHeight: \"3rem\" }}>\n              안녕하세요, 발전하는 프론트 엔드 개발자 박진모입니다.\n              <br />\n              해당 사이트는 개발 공부를 하면서 정리하는 공간을 위해\n              만들었습니다. 혹시 저에게 관심이 있으시거나 궁금한 점, 정리한\n              내용중 틀린 내용이 있으면 옆의 연락처를 통해 저에게 연락을 주세요.\n              <br />\n              감사합니다. 😄\n              <br />\n              <span style={{ color: \"#4aa8d8\" }}>\n                #HTML #CSS #Javascript #Typescript #React\n              </span>\n            </p>\n          </li>\n          <li className=\"intro-tags\">\n            <article>\n              <h6>경력</h6>\n              <span>웹 퍼블리셔 1년</span>\n            </article>\n            <article>\n              <h6>포트폴리오</h6>\n              <span>웹 퍼블리셔 1년</span>\n            </article>\n            <article>\n              <h6>전화번호</h6>\n              <span>010-2477-1240</span>\n            </article>\n            <article>\n              <h6>이메일</h6>\n              <span>qkrwslah12342@gmail.com</span>\n            </article>\n          </li>\n        </ol>\n        <h1>Front-End Stack</h1>\n        <ol className=\"front-stack\">\n          <li>\n            <StaticImage\n              className=\"stackImg\"\n              src=\"../images/HTMLLOGO.png\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              quality={95}\n              alt=\"Stack Logo\"\n            />\n          </li>\n          <li>\n            <StaticImage\n              className=\"stackImg\"\n              src=\"../images/CSSLOGO.png\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              quality={95}\n              alt=\"Stack Logo\"\n            />\n          </li>\n          <li>\n            <StaticImage\n              className=\"stackImg\"\n              src=\"../images/JAVASCRIPTLOGO.png\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              quality={95}\n              alt=\"Stack Logo\"\n            />\n          </li>\n          <li>\n            <StaticImage\n              className=\"stackImg\"\n              src=\"../images/TYPESCRIPT.png\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              quality={95}\n              alt=\"Stack Logo\"\n            />\n          </li>\n          <li>\n            <StaticImage\n              className=\"stackImg\"\n              src=\"../images/REACTLOGO.png\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              quality={95}\n              alt=\"Stack Logo\"\n            />\n          </li>\n          <li>\n            <StaticImage\n              className=\"stackImg\"\n              src=\"../images/styled.png\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              quality={95}\n              alt=\"Stack Logo\"\n            />\n          </li>\n          <li>\n            <StaticImage\n              className=\"stackImg\"\n              src=\"../images/BABELLOGO.png\"\n              formats={[\"auto\", \"webp\", \"avif\"]}\n              quality={95}\n              alt=\"Stack Logo\"\n            />\n          </li>\n        </ol>\n      </div>\n      <h1 className=\"post-title\">Note</h1>\n\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","console","log","style","listStyle","className","lineHeight","color","S","src","formats","quality","alt","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}